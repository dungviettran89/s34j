buildscript {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'us.cuatoi.s34j'
version = '0.2.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.slf4j:slf4j-api:1.7.25')
    testCompile('junit:junit:4.12')
    testCompile('org.slf4j:slf4j-simple:1.7.25')
}

/**
 * Maven deployment configuration
 */
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'NIO provider for S34J'
                packaging 'jar'
                description 'Provide a nio implementation for Simple Block Storage.'
                url 'https://s34j.cuatoi.us'

                scm {
                    url 'https://github.com/dungviettran89/s34j/'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'dungviettran89'
                        name 'Tran Viet Dung'
                        email 'dungviettran89@gmail.com'
                    }
                }
            }
        }
    }
}

