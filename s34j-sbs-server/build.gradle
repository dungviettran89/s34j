import org.apache.tools.ant.taskdefs.condition.Os

def isMongo = Os.isFamily(Os.FAMILY_UNIX)

buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'us.cuatoi.s34j'
version = '0.3.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile project(':s34j-sbs')

    compile('org.springframework.boot:spring-boot-starter-web')
    //test stores
    compile('com.google.jimfs:jimfs:1.1')
    compile('org.apache.commons:commons-vfs2:2.2')
    compile('com.github.lookfirst:sardine:5.8')
    compile('com.upplication:s3fs:2.2.1')
    compile('io.minio:minio:3.0.10')

    testCompile('org.springframework.boot:spring-boot-starter-test')

    if (isMongo) {
        println 'MongoDB enabled'
        //for MongoDB
        compile('org.springframework.boot:spring-boot-starter-data-mongodb')
        compile('net.javacrumbs.shedlock:shedlock-provider-mongo:0.18.2')
        compile('de.flapdoodle.embed:de.flapdoodle.embed.mongo:1.50.5')
        compile('cz.jirutka.spring:embedmongo-spring:1.3.1')

    } else {
        //for JPA
        println 'JPA enabled'
        compile('org.springframework.boot:spring-boot-starter-data-jpa')
        compile('net.javacrumbs.shedlock:shedlock-provider-jdbc-template:0.18.2')
        compile('com.h2database:h2')
    }

}

springBoot {
    executable = true
}

apply plugin: 'findbugs'
tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}
