buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'io.spring.dependency-management'

group = 'us.cuatoi.s34j'
version = '0.6.1'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.apache.commons:commons-lang3:3.4')
	compile('com.google.guava:guava:23.3-jre')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('com.fasterxml.jackson.core:jackson-databind')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-security')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
}

/*
 *
 *  * Copyright (C) 2018 dungviettran89@gmail.com
 *  *
 *  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  * in compliance with the License. You may obtain a copy of the License at
 *  *
 *  * http://www.apache.org/licenses/LICENSE-2.0
 *  *
 *  * Unless required by applicable law or agreed to in writing, software distributed under the License
 *  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 *  * or implied. See the License for the specific language governing permissions and limitations under
 *  * the License.
 *  *
 *
 */

/**
 * Find bugs plugins
 */

apply plugin: 'findbugs'
tasks.withType(FindBugs) {
	reports {
		xml.enabled false
		html.enabled true
	}
}

/**
 * Maven deployment configuration
 */
task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives javadocJar, sourcesJar
}

signing {
	sign configurations.archives
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			pom.project {
				name 'S34J Spring Service Mesh'
				packaging 'jar'
				description 'A spring boot service mesh.'
				url 'https://s34j.cuatoi.us'

				scm {
					url 'https://github.com/dungviettran89/s34j/'
				}

				licenses {
					license {
						name 'The Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id 'dungviettran89'
						name 'Tran Viet Dung'
						email 'dungviettran89@gmail.com'
					}
				}
			}
		}
	}
}
