/*
 *
 *  * Copyright (C) 2018 dungviettran89@gmail.com
 *  *
 *  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  * in compliance with the License. You may obtain a copy of the License at
 *  *
 *  * http://www.apache.org/licenses/LICENSE-2.0
 *  *
 *  * Unless required by applicable law or agreed to in writing, software distributed under the License
 *  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 *  * or implied. See the License for the specific language governing permissions and limitations under
 *  * the License.
 *  *
 *
 */

def isMongo = false

buildscript {
    ext {
        springBootVersion = '1.5.14.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'us.cuatoi.s34j'
version = '0.7.1'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile project(':s34j-sbs')
    compile project(':s34j-core')
    compile project(':s34j-spring')

    compile('org.springframework.boot:spring-boot-starter-web')
    //test stores
    compile('com.google.jimfs:jimfs:1.1')
    compile('org.apache.commons:commons-vfs2:2.2')
    compile('com.github.lookfirst:sardine:5.8')
    compile('com.upplication:s3fs:2.2.1')
    compile('io.minio:minio:3.0.12')
    compile('org.slf4j:jul-to-slf4j:1.7.25')
    compile('com.sun.mail:javax.mail:1.6.1')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.springframework.boot:spring-boot-devtools")
    testCompile('org.awaitility:awaitility:3.1.0')

    if (isMongo) {
        println 'MongoDB enabled'
        //for MongoDB
        compile('org.springframework.boot:spring-boot-starter-data-mongodb')
        compile('net.javacrumbs.shedlock:shedlock-provider-mongo:0.18.2')
        compile('de.flapdoodle.embed:de.flapdoodle.embed.mongo:1.50.5')
        compile('cz.jirutka.spring:embedmongo-spring:1.3.1')

    } else {
        //for JPA
        println 'JPA enabled'
        compile('org.springframework.boot:spring-boot-starter-data-jpa')
        compile('net.javacrumbs.shedlock:shedlock-provider-jdbc-template:0.18.2')
        compile('com.h2database:h2')
    }

}

springBoot {
    executable = false
}

bootRepackage {
    enabled = false
}

apply plugin: 'findbugs'
tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

task uploadArchives {
    
}